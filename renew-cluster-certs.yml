---
- name: Renew Kubernetes Cluster Certificates
  hosts: mgmt
  serial: 1
  gather_facts: yes
  vars:
    certs_already_expired: false
    
  tasks:
  - name: Renew certificates on Master
    command:
      cmd: /usr/local/bin/kubeadm alpha certs renew all
    become: yes

  - name: Rebuild Kubelet Config
    shell: /usr/local/bin/kubeadm alpha kubeconfig user --org system:nodes --client-name system:node:$(hostname) > /etc/kubernetes/kubelet.conf
    become: yes
    when: certs_already_expired

  - name: Update DGX Kubeconfig
    shell: |
      mv /home/dgx/.kube/config /home/dgx/.kube/config.backup.$(date +"%Y-%m-%d")
      cp /etc/kubernetes/admin.conf /home/dgx/.kube/config
      chown dgx:dgx /home/dgx/.kube/config
    become: yes
    when: certs_already_expired

  - name: Restart Docker
    service:
      name: docker
      state: restarted
    become: yes
  
  - name: Restart Kubelet
    service:
      name: kubelet
      state: restarted
    become: yes

  - name: Wait for node to be ready
    shell: kubectl get node $(hostname) |grep $(hostname) |grep Ready
    register: cmd_result
    retries: 30
    delay: 10
    until: cmd_result.stdout_lines | list | count == 1
    become: no
    changed_when: false

- name: Print Cluster and Cert status
  hosts: mgmt
  serial: 1
  gather_facts: no

  tasks:
  - name: Check Cert Expriation
    command:
      cmd: /usr/local/bin/kubeadm alpha certs check-expiration
    become: yes
    changed_when: false
    register: cert_out

  - name: Print Cert Status
    debug:
      msg: "{{ cert_out.stdout_lines }}"

  - name: Check if Node is ready
    shell: kubectl get node $(hostname) |grep $(hostname) |grep Ready
    register: cmd_result
    become: no
    changed_when: false

  - name: Print Cert Status
    debug:
      msg: "{{ cmd_result.stdout_lines }}"
  